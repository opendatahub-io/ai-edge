apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    tekton.dev/pipeline: aiedge-e2e
    model-name: bike-rentals-auto-ml
  generateName: aiedge-e2e-bike-rentals-auto-ml-
spec:
  params:
  - name: model-name
    value: bike-rentals-auto-ml
  - name: model-version
    value: "1"
  - name: s3-bucket-name
    value: rhoai-edge-models
  - name: git-containerfile-repo
    value: https://github.com/opendatahub-io/ai-edge.git
  - name: git-containerfile-revision
    value: "main"
  - name: containerfileRelativePath
    value: pipelines/containerfiles/Containerfile.seldonio.mlserver.mlflow
  - name: fetch-model
    value: "s3"
  - name: git-model-repo
    value: https://github.com/opendatahub-io/ai-edge.git
  - name: modelRelativePath
    value: ""
  - name: git-model-revision
    value: "main"
  - name: test-endpoint
    value: "invocations"
  - name: candidate-image-tag-reference
    value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.model-name):$(params.model-version)-candidate
  - name: target-image-tag-references
    value:
    - quay.io/rhoai-edge/$(params.model-name):$(params.model-version)-$(context.pipelineRun.uid)
    - quay.io/rhoai-edge/$(params.model-name):$(params.model-version)
    - quay.io/rhoai-edge/$(params.model-name):latest
  - name: gitops-git-server
    value: https://github.com
  - name: gitops-git-api-server
    value: api.github.com
  - name: gitops-git-org-name
    value: opendatahub-io
  - name: gitops-git-repo-name
    value: ai-edge
  - name: gitops-git-repo-branch-base
    value: main
  - name: gitops-git-api-prefix
    value: ''
  - name: gitops-git-token-secret-name
    value: edge-user-1
  - name: gitops-git-token-secret-key
    value: token
  - name: gitops-yq-script
    value: |
      yq eval -i "(.images[] | select(.name == \"edge-model-template-image\").newName) = \"${IMAGE_NAME}\"" \
        acm/odh-edge/apps/bike-rental-app/kustomization.yaml
      yq eval -i "(.images[] | select(.name == \"edge-model-template-image\").digest) = \"${IMAGE_DIGEST}\"" \
        acm/odh-edge/apps/bike-rental-app/kustomization.yaml
  - name: upon-end
    value: "delete"
  pipelineRef:
    name: aiedge-e2e
  serviceAccountName: pipeline
  timeout: 1h0m0s
  workspaces:
  - name: build-workspace-pv
    # Have the tekton controller allocate a PVC for each pipeline run that persists for the life of each PipelineRun object.
    # NOTE: This PVC will be deleted by the Tekton controller when the PipelineRun is deleted
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: s3-secret
    secret:
        secretName: credentials-s3
  - configMap:
      name: bike-rentals-test-data
    name: test-data
  - name: git-basic-auth
    secret:
      secretName: edge-user-1
